architectury {
    common rootProject.enabled_platforms.split(',')
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury:$rootProject.architectury_api_version"

    modImplementation("com.simibubi.create:create-fabric-${rootProject.minecraft_version}:${rootProject.create_fabric_version}")
    modImplementation("de.mrjulsen.mcdragonlib:dragonlib-fabric:${rootProject.minecraft_version}-${rootProject.dragonlib_version}")
    modImplementation("de.mrjulsen.dragnsounds:dragnsounds-fabric:${rootProject.minecraft_version}-beta-${rootProject.dragnsounds_version}")
    modImplementation("maven.modrinth:create-railways-navigator:F3eWKMrk")
    implementation("org.java-websocket:Java-WebSocket:1.6.0")
    include("org.java-websocket:Java-WebSocket:1.6.0")

    modCompileOnly("fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${rootProject.forge_config_api_port_version}")

    implementation("ws.schild:jave-all-deps:${rootProject.jave_version}")
}
